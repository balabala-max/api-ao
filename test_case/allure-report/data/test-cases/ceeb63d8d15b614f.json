{
  "uid" : "ceeb63d8d15b614f",
  "name" : "test_pay_order_1",
  "fullName" : "test_case.test_order.TestOrder#test_pay_order_1",
  "historyId" : "f2839bdf161094c9f22f2cf326592119",
  "time" : {
    "start" : 1658396087178,
    "stop" : 1658396087191,
    "duration" : 13
  },
  "status" : "broken",
  "statusMessage" : "jinja2.exceptions.UndefinedError: 'order' is undefined",
  "statusTrace" : "self = <test_case.test_order.TestOrder object at 0x000001DF49FB2C40>\ntest_data = {'data': {'openid': '1234', 'store': '1020', 'token': '234af73571da46ade79ea6a74961b1d23d609b79'}, 'expdata': {'code': 0, 'mdg': '调取支付接口成功!'}}\norder_init1 = <lib.Loginpuls.Order object at 0x000001DF4A0CC610>\nlogin_init = '234af73571da46ade79ea6a74961b1d23d609b79'\n\n    def test_pay_order_1(self,test_data,order_init1,login_init):\n        with allure.step('2--调用支付接口'):\n            # template = Template(test_data['orderno'])\n            # print('替换',template)\n            # _token = login_init\n            # token = test_data['data'][_token]   #请求参数、\n            # new_data = replace_yaml(login_init)\n            # print('new_data',new_data)\n            # print('请求参数打印',test_data['data'])\n            orderno = read_yaml1()['orderno']\n            print('订单号',orderno)\n            #对token 替换\n            template = string.Template(login_init)\n            test_data['data']['token'] = template.safe_substitute(test_data['data']['token'])\n    \n            # template2 = string.Template(orderno)  #从变量里提取orderno\n            # a = template2.safe_substitute(read_yaml()['Order']['payorder']['path'])\n            # read_yaml()['Order']['payorder']['path'] = a\n    \n            new_orderno = {\"orderno\":orderno}\n            with open(\"../data/order.yaml\", encoding=\"utf-8\")as w:\n                # value = yaml.load(f,Loader=yaml.FullLoader)\n                string_var = w.read()\n    \n>           respa = jinja2.Template(string_var).render(new_orderno)\n\ntest_order.py:61: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\jinja2\\environment.py:1301: in render\n    self.environment.handle_exception()\n..\\..\\..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\jinja2\\environment.py:936: in handle_exception\n    raise rewrite_traceback_stack(source=source)\n<template>:6: in top-level template code\n    ???\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <jinja2.environment.Environment object at 0x000001DF4A0CCCD0>\nobj = Undefined, argument = 0\n\n    def getitem(\n        self, obj: t.Any, argument: t.Union[str, t.Any]\n    ) -> t.Union[t.Any, Undefined]:\n        \"\"\"Get an item or attribute of an object but prefer the item.\"\"\"\n        try:\n>           return obj[argument]\nE           jinja2.exceptions.UndefinedError: 'order' is undefined\n\n..\\..\\..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\jinja2\\environment.py:466: UndefinedError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "test_data",
    "time" : {
      "start" : 1658396087177,
      "stop" : 1658396087177,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "clear_token",
    "time" : {
      "start" : 1658396086747,
      "stop" : 1658396086748,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "order_init1",
    "time" : {
      "start" : 1658396087174,
      "stop" : 1658396087177,
      "duration" : 3
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "login_init",
    "time" : {
      "start" : 1658396086748,
      "stop" : 1658396087109,
      "duration" : 361
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "jinja2.exceptions.UndefinedError: 'order' is undefined",
    "statusTrace" : "self = <test_case.test_order.TestOrder object at 0x000001DF49FB2C40>\ntest_data = {'data': {'openid': '1234', 'store': '1020', 'token': '234af73571da46ade79ea6a74961b1d23d609b79'}, 'expdata': {'code': 0, 'mdg': '调取支付接口成功!'}}\norder_init1 = <lib.Loginpuls.Order object at 0x000001DF4A0CC610>\nlogin_init = '234af73571da46ade79ea6a74961b1d23d609b79'\n\n    def test_pay_order_1(self,test_data,order_init1,login_init):\n        with allure.step('2--调用支付接口'):\n            # template = Template(test_data['orderno'])\n            # print('替换',template)\n            # _token = login_init\n            # token = test_data['data'][_token]   #请求参数、\n            # new_data = replace_yaml(login_init)\n            # print('new_data',new_data)\n            # print('请求参数打印',test_data['data'])\n            orderno = read_yaml1()['orderno']\n            print('订单号',orderno)\n            #对token 替换\n            template = string.Template(login_init)\n            test_data['data']['token'] = template.safe_substitute(test_data['data']['token'])\n    \n            # template2 = string.Template(orderno)  #从变量里提取orderno\n            # a = template2.safe_substitute(read_yaml()['Order']['payorder']['path'])\n            # read_yaml()['Order']['payorder']['path'] = a\n    \n            new_orderno = {\"orderno\":orderno}\n            with open(\"../data/order.yaml\", encoding=\"utf-8\")as w:\n                # value = yaml.load(f,Loader=yaml.FullLoader)\n                string_var = w.read()\n    \n>           respa = jinja2.Template(string_var).render(new_orderno)\n\ntest_order.py:61: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\jinja2\\environment.py:1301: in render\n    self.environment.handle_exception()\n..\\..\\..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\jinja2\\environment.py:936: in handle_exception\n    raise rewrite_traceback_stack(source=source)\n<template>:6: in top-level template code\n    ???\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <jinja2.environment.Environment object at 0x000001DF4A0CCCD0>\nobj = Undefined, argument = 0\n\n    def getitem(\n        self, obj: t.Any, argument: t.Union[str, t.Any]\n    ) -> t.Union[t.Any, Undefined]:\n        \"\"\"Get an item or attribute of an object but prefer the item.\"\"\"\n        try:\n>           return obj[argument]\nE           jinja2.exceptions.UndefinedError: 'order' is undefined\n\n..\\..\\..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\jinja2\\environment.py:466: UndefinedError",
    "steps" : [ {
      "name" : "2--调用支付接口",
      "time" : {
        "start" : 1658396087178,
        "stop" : 1658396087188,
        "duration" : 10
      },
      "status" : "broken",
      "statusMessage" : "jinja2.exceptions.UndefinedError: 'order' is undefined\n",
      "statusTrace" : "  File \"C:\\Users\\jianghaiyan\\Desktop\\hiersun\\md\\api40\\api_-ao\\test_case\\test_order.py\", line 61, in test_pay_order_1\n    respa = jinja2.Template(string_var).render(new_orderno)\n  File \"C:\\Users\\jianghaiyan\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\jinja2\\environment.py\", line 1301, in render\n    self.environment.handle_exception()\n  File \"C:\\Users\\jianghaiyan\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\jinja2\\environment.py\", line 936, in handle_exception\n    raise rewrite_traceback_stack(source=source)\n  File \"<template>\", line 6, in top-level template code\n  File \"C:\\Users\\jianghaiyan\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\jinja2\\environment.py\", line 466, in getitem\n    return obj[argument]\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "shouldDisplayMessage" : true,
      "attachmentsCount" : 0
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 0
  },
  "afterStages" : [ {
    "name" : "order_init1::0",
    "time" : {
      "start" : 1658396087274,
      "stop" : 1658396087275,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "login_init::0",
    "time" : {
      "start" : 1658396087277,
      "stop" : 1658396087277,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "test_case"
  }, {
    "name" : "suite",
    "value" : "test_order"
  }, {
    "name" : "subSuite",
    "value" : "TestOrder"
  }, {
    "name" : "host",
    "value" : "D-jianghaiyan"
  }, {
    "name" : "thread",
    "value" : "87872-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_case.test_order"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "ceeb63d8d15b614f.json",
  "parameterValues" : [ ]
}