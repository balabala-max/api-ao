{
  "uid" : "8bd4671f14c5f520",
  "name" : "test_pay_order_1",
  "fullName" : "test_case.test_order.TestOrder#test_pay_order_1",
  "historyId" : "f2839bdf161094c9f22f2cf326592119",
  "time" : {
    "start" : 1658330938074,
    "stop" : 1658330938088,
    "duration" : 14
  },
  "status" : "broken",
  "statusMessage" : "TypeError: 'NoneType' object is not subscriptable",
  "statusTrace" : "self = <test_case.test_order.TestOrder object at 0x000002AE5BC1F908>\ntest_data = {'data': {'openid': '1234', 'store': '1020', 'token': '234af73571da46ade79ea6a74961b1d23d609b79'}, 'expdata': {'code': 0, 'mdg': '调取支付接口成功!'}}\norder_init = <lib.Loginpuls.Order object at 0x000002AE5BBE8668>\nlogin_init = '234af73571da46ade79ea6a74961b1d23d609b79'\n\n    def test_pay_order_1(self,test_data,order_init,login_init):\n        with allure.step('2--调用支付接口'):\n            # _token = login_init\n            # token = test_data['data'][_token]   #请求参数、\n            test_data['data']['token'] = login_init\n            res = test_data['data']['openid'] + login_init + test_data['data']['store']\n            resp = order_init.payorder(res,url=str(f\"test_order_case::resp['orderno']\"))\n            print('支付接口响应值',resp)\n>           assert resp['code'] == test_data['expdata']['code']\nE           TypeError: 'NoneType' object is not subscriptable\n\ntest_order.py:31: TypeError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1658330937858,
      "stop" : 1658330937974,
      "duration" : 116
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "login_init",
    "time" : {
      "start" : 1658330937974,
      "stop" : 1658330938051,
      "duration" : 77
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "order_init",
    "time" : {
      "start" : 1658330938051,
      "stop" : 1658330938056,
      "duration" : 5
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "start_running",
    "time" : {
      "start" : 1658330937974,
      "stop" : 1658330937974,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "test_data",
    "time" : {
      "start" : 1658330938074,
      "stop" : 1658330938074,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "TypeError: 'NoneType' object is not subscriptable",
    "statusTrace" : "self = <test_case.test_order.TestOrder object at 0x000002AE5BC1F908>\ntest_data = {'data': {'openid': '1234', 'store': '1020', 'token': '234af73571da46ade79ea6a74961b1d23d609b79'}, 'expdata': {'code': 0, 'mdg': '调取支付接口成功!'}}\norder_init = <lib.Loginpuls.Order object at 0x000002AE5BBE8668>\nlogin_init = '234af73571da46ade79ea6a74961b1d23d609b79'\n\n    def test_pay_order_1(self,test_data,order_init,login_init):\n        with allure.step('2--调用支付接口'):\n            # _token = login_init\n            # token = test_data['data'][_token]   #请求参数、\n            test_data['data']['token'] = login_init\n            res = test_data['data']['openid'] + login_init + test_data['data']['store']\n            resp = order_init.payorder(res,url=str(f\"test_order_case::resp['orderno']\"))\n            print('支付接口响应值',resp)\n>           assert resp['code'] == test_data['expdata']['code']\nE           TypeError: 'NoneType' object is not subscriptable\n\ntest_order.py:31: TypeError",
    "steps" : [ {
      "name" : "2--调用支付接口",
      "time" : {
        "start" : 1658330938074,
        "stop" : 1658330938088,
        "duration" : 14
      },
      "status" : "broken",
      "statusMessage" : "TypeError: 'NoneType' object is not subscriptable\n",
      "statusTrace" : "  File \"C:\\Users\\Samsung\\Desktop\\files\\api_-ao\\test_case\\test_order.py\", line 31, in test_pay_order_1\n    assert resp['code'] == test_data['expdata']['code']\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "shouldDisplayMessage" : true,
      "attachmentsCount" : 0
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 0
  },
  "afterStages" : [ {
    "name" : "login_init::0",
    "time" : {
      "start" : 1658330938104,
      "stop" : 1658330938104,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "order_init::0",
    "time" : {
      "start" : 1658330938103,
      "stop" : 1658330938103,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "start_running::0",
    "time" : {
      "start" : 1658330938105,
      "stop" : 1658330938105,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "test_case"
  }, {
    "name" : "suite",
    "value" : "test_order"
  }, {
    "name" : "subSuite",
    "value" : "TestOrder"
  }, {
    "name" : "host",
    "value" : "DESKTOP-STOS3DP"
  }, {
    "name" : "thread",
    "value" : "2240-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_case.test_order"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "8bd4671f14c5f520.json",
  "parameterValues" : [ ]
}