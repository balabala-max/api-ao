{
  "uid" : "a0cf9f0a68e62575",
  "name" : "test_pay_order_1",
  "fullName" : "test_case.test_order.TestOrder#test_pay_order_1",
  "historyId" : "f2839bdf161094c9f22f2cf326592119",
  "time" : {
    "start" : 1658383117976,
    "stop" : 1658383118100,
    "duration" : 124
  },
  "status" : "broken",
  "statusMessage" : "TypeError: 'NoneType' object is not subscriptable",
  "statusTrace" : "self = <test_case.test_order.TestOrder object at 0x000002BEFBE52730>\ntest_data = {'data': {'openid': '1234', 'store': '1020', 'token': '${token}'}, 'expdata': {'code': 0, 'mdg': '调取支付接口成功!'}}\norder_init = <lib.Loginpuls.Order object at 0x000002BEFBE3E250>\nlogin_init = '234af73571da46ade79ea6a74961b1d23d609b79'\n\n    def test_pay_order_1(self,test_data,order_init,login_init):\n        with allure.step('2--调用支付接口'):\n            # _token = login_init\n            # token = test_data['data'][_token]   #请求参数、\n            new_data = replace_yaml(login_init)\n            print('new_data',new_data)\n            print('请求参数打印',test_data['data'])\n            resp = order_init.payorder(test_data['data'],url=str(f\"test_order_case::resp['orderno']\"))\n            print('支付接口响应值',resp)\n>           assert resp['code'] == test_data['expdata']['code']\nE           TypeError: 'NoneType' object is not subscriptable\n\ntest_order.py:41: TypeError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "test_data",
    "time" : {
      "start" : 1658383117974,
      "stop" : 1658383117975,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "login_init",
    "time" : {
      "start" : 1658383117564,
      "stop" : 1658383117871,
      "duration" : 307
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "clear_token",
    "time" : {
      "start" : 1658383117563,
      "stop" : 1658383117564,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "order_init",
    "time" : {
      "start" : 1658383117871,
      "stop" : 1658383117875,
      "duration" : 4
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "TypeError: 'NoneType' object is not subscriptable",
    "statusTrace" : "self = <test_case.test_order.TestOrder object at 0x000002BEFBE52730>\ntest_data = {'data': {'openid': '1234', 'store': '1020', 'token': '${token}'}, 'expdata': {'code': 0, 'mdg': '调取支付接口成功!'}}\norder_init = <lib.Loginpuls.Order object at 0x000002BEFBE3E250>\nlogin_init = '234af73571da46ade79ea6a74961b1d23d609b79'\n\n    def test_pay_order_1(self,test_data,order_init,login_init):\n        with allure.step('2--调用支付接口'):\n            # _token = login_init\n            # token = test_data['data'][_token]   #请求参数、\n            new_data = replace_yaml(login_init)\n            print('new_data',new_data)\n            print('请求参数打印',test_data['data'])\n            resp = order_init.payorder(test_data['data'],url=str(f\"test_order_case::resp['orderno']\"))\n            print('支付接口响应值',resp)\n>           assert resp['code'] == test_data['expdata']['code']\nE           TypeError: 'NoneType' object is not subscriptable\n\ntest_order.py:41: TypeError",
    "steps" : [ {
      "name" : "2--调用支付接口",
      "time" : {
        "start" : 1658383117976,
        "stop" : 1658383118099,
        "duration" : 123
      },
      "status" : "broken",
      "statusMessage" : "TypeError: 'NoneType' object is not subscriptable\n",
      "statusTrace" : "  File \"C:\\Users\\jianghaiyan\\Desktop\\hiersun\\md\\api40\\api_-ao\\test_case\\test_order.py\", line 41, in test_pay_order_1\n    assert resp['code'] == test_data['expdata']['code']\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "shouldDisplayMessage" : true,
      "attachmentsCount" : 0
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 0
  },
  "afterStages" : [ {
    "name" : "login_init::0",
    "time" : {
      "start" : 1658383118123,
      "stop" : 1658383118123,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "order_init::0",
    "time" : {
      "start" : 1658383118121,
      "stop" : 1658383118122,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "test_case"
  }, {
    "name" : "suite",
    "value" : "test_order"
  }, {
    "name" : "subSuite",
    "value" : "TestOrder"
  }, {
    "name" : "host",
    "value" : "D-jianghaiyan"
  }, {
    "name" : "thread",
    "value" : "81560-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_case.test_order"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "a0cf9f0a68e62575.json",
  "parameterValues" : [ ]
}