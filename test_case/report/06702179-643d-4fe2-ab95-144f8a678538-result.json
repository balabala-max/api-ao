{"name": "test_pay_order_1", "status": "broken", "statusDetails": {"message": "TypeError: Can't compile non template nodes", "trace": "self = <test_case.test_order.TestOrder object at 0x000001BA17587B80>\ntest_data = {'data': {'openid': '1234', 'store': '1020', 'token': '234af73571da46ade79ea6a74961b1d23d609b79'}, 'expdata': {'code': 0, 'mdg': '调取支付接口成功!'}}\norder_init1 = <lib.Loginpuls.Order object at 0x000001BA176B05E0>\nlogin_init = '234af73571da46ade79ea6a74961b1d23d609b79'\n\n    def test_pay_order_1(self,test_data,order_init1,login_init):\n        with allure.step('2--调用支付接口'):\n            # template = Template(test_data['orderno'])\n            # print('替换',template)\n            # _token = login_init\n            # token = test_data['data'][_token]   #请求参数、\n            # new_data = replace_yaml(login_init)\n            # print('new_data',new_data)\n            # print('请求参数打印',test_data['data'])\n            orderno = read_yaml1()['orderno']\n            print('订单号',orderno)\n            #对token 替换\n            template = string.Template(login_init)\n            test_data['data']['token'] = template.safe_substitute(test_data['data']['token'])\n    \n            # template2 =  Template(read_yaml()['Order']['payorder']['path'])\n            # read_yaml()['Order']['payorder']['path'] = template2.safe_substitute({\"orderno\":orderno})\n    \n    \n            new_orderno = {\"orderno\":orderno}\n            # with open(\"../data/order.yaml\", encoding=\"utf-8\")as w:\n            #     # value = yaml.load(f,Loader=yaml.FullLoader)\n            #     string_var = w.read()\n            # print(type(string_var))\n            # a = read_yaml()['Order']\n            # print(type(a))\n            #\n            a = read_yaml()\n            print(type(a))\n>           respa = jinja2.Template(a).render(new_orderno)\n\ntest_order.py:66: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\jinja2\\environment.py:1208: in __new__\n    return env.from_string(source, template_class=cls)\n..\\..\\..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\jinja2\\environment.py:1105: in from_string\n    return cls.from_code(self, self.compile(source), gs, None)\n..\\..\\..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\jinja2\\environment.py:761: in compile\n    source = self._generate(source, name, filename, defer_init=defer_init)\n..\\..\\..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\jinja2\\environment.py:689: in _generate\n    return generate(  # type: ignore\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nnode = {'Logining': {'login': {'method': 'GET', 'path': '/api/v1/member-auth/wechat-member/idomall/is-exist-user'}}, 'Order':...pay-srv/pay/wxpay/notify?_flag=false'}, 'payorder': {'method': 'GET', 'path': '/perfume/order/wxpay/mp2/{{orderno}}'}}}\nenvironment = <jinja2.environment.Environment object at 0x000001BA176B09D0>\nname = None, filename = None, stream = None, defer_init = False\noptimized = True\n\n    def generate(\n        node: nodes.Template,\n        environment: \"Environment\",\n        name: t.Optional[str],\n        filename: t.Optional[str],\n        stream: t.Optional[t.TextIO] = None,\n        defer_init: bool = False,\n        optimized: bool = True,\n    ) -> t.Optional[str]:\n        \"\"\"Generate the python source for a node tree.\"\"\"\n        if not isinstance(node, nodes.Template):\n>           raise TypeError(\"Can't compile non template nodes\")\nE           TypeError: Can't compile non template nodes\n\n..\\..\\..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\jinja2\\compiler.py:112: TypeError"}, "steps": [{"name": "2--调用支付接口", "status": "broken", "statusDetails": {"message": "TypeError: Can't compile non template nodes\n", "trace": "  File \"C:\\Users\\jianghaiyan\\Desktop\\hiersun\\md\\api40\\api_-ao\\test_case\\test_order.py\", line 66, in test_pay_order_1\n    respa = jinja2.Template(a).render(new_orderno)\n  File \"C:\\Users\\jianghaiyan\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\jinja2\\environment.py\", line 1208, in __new__\n    return env.from_string(source, template_class=cls)\n  File \"C:\\Users\\jianghaiyan\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\jinja2\\environment.py\", line 1105, in from_string\n    return cls.from_code(self, self.compile(source), gs, None)\n  File \"C:\\Users\\jianghaiyan\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\jinja2\\environment.py\", line 761, in compile\n    source = self._generate(source, name, filename, defer_init=defer_init)\n  File \"C:\\Users\\jianghaiyan\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\jinja2\\environment.py\", line 689, in _generate\n    return generate(  # type: ignore\n  File \"C:\\Users\\jianghaiyan\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\jinja2\\compiler.py\", line 112, in generate\n    raise TypeError(\"Can't compile non template nodes\")\n"}, "start": 1658398549348, "stop": 1658398549351}], "start": 1658398549348, "stop": 1658398549353, "uuid": "daca30e1-3aa4-453f-9f22-10368fd9cf15", "historyId": "f2839bdf161094c9f22f2cf326592119", "testCaseId": "893d711cb11a469ebd5155b7066fac35", "fullName": "test_case.test_order.TestOrder#test_pay_order_1", "labels": [{"name": "parentSuite", "value": "test_case"}, {"name": "suite", "value": "test_order"}, {"name": "subSuite", "value": "TestOrder"}, {"name": "host", "value": "D-jianghaiyan"}, {"name": "thread", "value": "87176-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_order"}]}