{"name": "test_pay_order_1", "status": "broken", "statusDetails": {"message": "TypeError: dump_all() got an unexpected keyword argument 'Loader'", "trace": "self = <test_case.test_order.TestOrder object at 0x00000251E0B974F0>\ntest_data = {'data': {'openid': '1234', 'store': '1020', 'token': '234af73571da46ade79ea6a74961b1d23d609b79'}, 'expdata': {'code': 0, 'mdg': '调取支付接口成功!'}}\norder_init1 = <lib.Loginpuls.Order object at 0x00000251E0B92340>\nlogin_init = '234af73571da46ade79ea6a74961b1d23d609b79'\n\n    def test_pay_order_1(self,test_data,order_init1,login_init):\n        with allure.step('2--调用支付接口'):\n            # template = Template(test_data['orderno'])\n            # print('替换',template)\n            # _token = login_init\n            # token = test_data['data'][_token]   #请求参数、\n            # new_data = replace_yaml(login_init)\n            # print('new_data',new_data)\n            # print('请求参数打印',test_data['data'])\n            orderno = read_yaml1()['orderno']\n            print('订单号',orderno)\n            #对token 替换\n            template = string.Template(login_init)\n            test_data['data']['token'] = template.safe_substitute(test_data['data']['token'])\n    \n            # template2 =  Template(read_yaml()['Order']['payorder']['path'])\n            # read_yaml()['Order']['payorder']['path'] = template2.safe_substitute({\"orderno\":orderno})\n    \n    \n            new_orderno = {\"orderno\":orderno}\n            # with open(\"../data/order.yaml\", encoding=\"utf-8\")as w:\n            #     # value = yaml.load(f,Loader=yaml.FullLoader)\n            #     string_var = w.read()\n            # print(type(string_var))\n            # a = read_yaml()['Order']\n            # print(type(a))\n            #\n>           respa = jinja2.Template(read_yaml()).render(new_orderno)\n\ntest_order.py:64: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\utils\\bianliang.py:8: in read_yaml\n    value = yaml.dump(f,Loader=yaml.FullLoader)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ndata = <_io.TextIOWrapper name='../data/order.yaml' mode='r' encoding='utf-8'>\nstream = None, Dumper = <class 'yaml.dumper.Dumper'>\nkwds = {'Loader': <class 'yaml.loader.FullLoader'>}\n\n    def dump(data, stream=None, Dumper=Dumper, **kwds):\n        \"\"\"\n        Serialize a Python object into a YAML stream.\n        If stream is None, return the produced string instead.\n        \"\"\"\n>       return dump_all([data], stream, Dumper=Dumper, **kwds)\nE       TypeError: dump_all() got an unexpected keyword argument 'Loader'\n\n..\\..\\..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\yaml\\__init__.py:253: TypeError"}, "steps": [{"name": "2--调用支付接口", "status": "broken", "statusDetails": {"message": "TypeError: dump_all() got an unexpected keyword argument 'Loader'\n", "trace": "  File \"C:\\Users\\jianghaiyan\\Desktop\\hiersun\\md\\api40\\api_-ao\\test_case\\test_order.py\", line 64, in test_pay_order_1\n    respa = jinja2.Template(read_yaml()).render(new_orderno)\n  File \"C:\\Users\\jianghaiyan\\Desktop\\hiersun\\md\\api40\\api_-ao\\utils\\bianliang.py\", line 8, in read_yaml\n    value = yaml.dump(f,Loader=yaml.FullLoader)\n  File \"C:\\Users\\jianghaiyan\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\yaml\\__init__.py\", line 253, in dump\n    return dump_all([data], stream, Dumper=Dumper, **kwds)\n"}, "start": 1658397867536, "stop": 1658397867538}], "start": 1658397867536, "stop": 1658397867540, "uuid": "6661924a-c964-446d-8cd5-08c1059752dd", "historyId": "f2839bdf161094c9f22f2cf326592119", "testCaseId": "893d711cb11a469ebd5155b7066fac35", "fullName": "test_case.test_order.TestOrder#test_pay_order_1", "labels": [{"name": "parentSuite", "value": "test_case"}, {"name": "suite", "value": "test_order"}, {"name": "subSuite", "value": "TestOrder"}, {"name": "host", "value": "D-jianghaiyan"}, {"name": "thread", "value": "72640-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_order"}]}